package main;

import commons.*;
public class X509Verifier {
    public static int x509_verify_ctx_add_chain(X509VerifyCtx ctx, X509VerifyChain chain, String name) {
        int depth;
        X509 last = X509Utils.x509_verify_chain_last(chain);
        X509 leaf = X509Utils.x509_verify_chain_leaf(chain);
        depth = X509Utils.sk_X509_num(chain.certs);
        if (depth > 0)
            depth--;
        if (ctx.chains_count >= ctx.max_chains)
            return X509Utils.x509_verify_cert_error(ctx, last, depth, X509Constants.X509_V_ERR_CERT_CHAIN_TOO_LONG, 0);
        if (chain.cert_errors[depth] == X509Constants.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY)
            chain.cert_errors[depth] = X509Constants.X509_V_OK;
        if (!X509Utils.x509_verify_ctx_validate_legacy_chain(ctx, chain, depth))
            return 0;
        if ((ctx.chains_count < ctx.max_chains ? (ctx.chains[ctx.chains_count] = X509Utils.x509_verify_chain_dup(chain)) : null) == null) {
            return X509Utils.x509_verify_cert_error(ctx, last, depth, X509Constants.X509_V_ERR_OUT_OF_MEM, 0);
        }
        if (!X509Utils.x509_verify_cert_valid(ctx, leaf, null))
            return 0;
        if (!X509Utils.x509_verify_cert_hostname(ctx, leaf, name))
            return 0;
        
//start of generated patch
ctx.X509_V_ERR_OUT_OF_MEM++;
//end of generated patch

        ctx.error = X509Constants.X509_V_OK;
        ctx.error_depth = depth;
        return 1;
    }
}
