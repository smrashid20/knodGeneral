{
    "1": {
        "AbstractCategoryItemRenderer": [
            {
                "methods": [
                    "getBaseToolTipGenerator",
                    "drawAnnotations",
                    "getLegendItems",
                    "setBaseItemLabelGenerator",
                    "drawBackground",
                    "setLegendItemToolTipGenerator",
                    "setSeriesItemLabelGenerator",
                    "setLegendItemURLGenerator",
                    "createHotSpotShape",
                    "createState",
                    "getRowCount",
                    "getURLGenerator",
                    "findRangeBounds",
                    "getColumnCount",
                    "setPlot",
                    "getLegendItemURLGenerator",
                    "setBaseURLGenerator",
                    "addAnnotation",
                    "addEntity",
                    "drawOutline",
                    "getSeriesItemLabelGenerator",
                    "getLegendItem",
                    "getBaseURLGenerator",
                    "calculateRangeMarkerTextAnchorPoint",
                    "calculateDomainMarkerTextAnchorPoint",
                    "setLegendItemLabelGenerator",
                    "getLegendItemToolTipGenerator",
                    "setSeriesURLGenerator",
                    "setBaseToolTipGenerator",
                    "getLegendItemLabelGenerator",
                    "setSeriesToolTipGenerator",
                    "getItemLabelGenerator",
                    "getRangeAxis",
                    "removeAnnotation",
                    "updateCrosshairValues",
                    "createHotSpotBounds",
                    "getPlot",
                    "hashCode",
                    "removeAnnotations",
                    "drawRangeLine",
                    "initialise",
                    "getSeriesURLGenerator",
                    "getItemMiddle",
                    "getDomainAxis",
                    "drawDomainMarker",
                    "getToolTipGenerator",
                    "drawItemLabel",
                    "getBaseItemLabelGenerator",
                    "getPassCount",
                    "equals",
                    "drawDomainLine",
                    "clone",
                    "hitTest",
                    "getDrawingSupplier",
                    "getSeriesToolTipGenerator",
                    "drawRangeMarker"
                ],
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "supers": [
                    "AbstractRenderer",
                    "CategoryItemRenderer",
                    "Cloneable",
                    "PublicCloneable",
                    "Serializable"
                ],
                "fields": [
                    "foregroundAnnotations",
                    "itemLabelGeneratorList",
                    "backgroundAnnotations",
                    "baseToolTipGenerator",
                    "legendItemToolTipGenerator",
                    "columnCount",
                    "toolTipGeneratorList",
                    "urlGeneratorList",
                    "legendItemURLGenerator",
                    "baseURLGenerator",
                    "serialVersionUID",
                    "plot",
                    "legendItemLabelGenerator",
                    "rowCount",
                    "baseItemLabelGenerator"
                ],
                "constructors": [
                    []
                ],
                "itype": "TYPE"
            }
        ],
        "getBaseToolTipGenerator": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryToolTipGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryToolTipGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "drawAnnotations": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryAxis",
                    "ValueAxis",
                    "Layer",
                    "PlotRenderingInfo"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryAxis",
                    "ValueAxis",
                    "Layer",
                    "PlotRenderingInfo"
                ],
                "itype": "METHOD"
            }
        ],
        "getLegendItems": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "LegendItemCollection",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setBaseItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryItemLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryItemLabelGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryItemLabelGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "drawBackground": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "setLegendItemToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "setSeriesItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryItemLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryItemLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryItemLabelGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "setLegendItemURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "createHotSpotShape": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "Shape",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "Shape",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState"
                ],
                "itype": "METHOD"
            }
        ],
        "createState": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "CategoryItemRendererState",
                "params": [
                    "PlotRenderingInfo"
                ],
                "itype": "METHOD"
            }
        ],
        "getRowCount": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 4,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "getURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryURLGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryURLGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "findRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 12,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 4,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 12,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 12,
                "dtype": "Range",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 12,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "List",
                    "Range",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 12,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "List",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "getColumnCount": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 5,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setPlot": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryPlot"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryPlot"
                ],
                "itype": "METHOD"
            }
        ],
        "getLegendItemURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setBaseURLGenerator": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryURLGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryURLGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryURLGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "addAnnotation": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryAnnotation"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryAnnotation"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryAnnotation",
                    "Layer"
                ],
                "itype": "METHOD"
            }
        ],
        "addEntity": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "EntityCollection",
                    "Shape",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "double",
                    "double"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "EntityCollection",
                    "Shape",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "drawOutline": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "getSeriesItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryItemLabelGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryItemLabelGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "getLegendItem": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 3,
                "dtype": "LegendItem",
                "params": [
                    "int",
                    "int"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "LegendItem",
                "params": [
                    "int",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "getBaseURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryURLGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryURLGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "calculateRangeMarkerTextAnchorPoint": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 3,
                "dtype": "Point2D",
                "params": [
                    "Graphics2D",
                    "PlotOrientation",
                    "Rectangle2D",
                    "Rectangle2D",
                    "RectangleInsets",
                    "LengthAdjustmentType",
                    "RectangleAnchor"
                ],
                "itype": "METHOD"
            }
        ],
        "calculateDomainMarkerTextAnchorPoint": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "Point2D",
                "params": [
                    "Graphics2D",
                    "PlotOrientation",
                    "Rectangle2D",
                    "Rectangle2D",
                    "RectangleInsets",
                    "LengthAdjustmentType",
                    "RectangleAnchor"
                ],
                "itype": "METHOD"
            }
        ],
        "setLegendItemLabelGenerator": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategorySeriesLabelGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "getLegendItemToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setSeriesURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryURLGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryURLGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryURLGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "setBaseToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryToolTipGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryToolTipGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "CategoryToolTipGenerator"
                ],
                "itype": "METHOD"
            }
        ],
        "getLegendItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setSeriesToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryToolTipGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryToolTipGenerator"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "int",
                    "CategoryToolTipGenerator",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "getItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryItemLabelGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryItemLabelGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "getRangeAxis": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 3,
                "dtype": "ValueAxis",
                "params": [
                    "CategoryPlot",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "removeAnnotation": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "boolean",
                "params": [
                    "CategoryAnnotation"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "boolean",
                "params": [
                    "CategoryAnnotation"
                ],
                "itype": "METHOD"
            }
        ],
        "updateCrosshairValues": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "CategoryCrosshairState",
                    "Comparable",
                    "Comparable",
                    "double",
                    "int",
                    "double",
                    "double",
                    "PlotOrientation"
                ],
                "itype": "METHOD"
            }
        ],
        "createHotSpotBounds": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "Rectangle2D",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "Rectangle2D",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "getPlot": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 4,
                "dtype": "CategoryPlot",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryPlot",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "hashCode": [
            {
                "scope": "SortOrder",
                "modifier": "public ",
                "cnt": 89,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 572,
                "dtype": "int",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "Layer",
                "modifier": "public ",
                "cnt": 130,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "public ",
                "cnt": 414,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public ",
                "cnt": 213,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public ",
                "cnt": 100,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "removeAnnotations": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "drawRangeLine": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "ValueAxis",
                    "Rectangle2D",
                    "double",
                    "Paint",
                    "Stroke"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "ValueAxis",
                    "Rectangle2D",
                    "double",
                    "Paint",
                    "Stroke"
                ],
                "itype": "METHOD"
            }
        ],
        "initialise": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryItemRendererState",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryDataset",
                    "PlotRenderingInfo"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryItemRendererState",
                "params": [
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryDataset",
                    "PlotRenderingInfo"
                ],
                "itype": "METHOD"
            }
        ],
        "getSeriesURLGenerator": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryURLGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryURLGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "getItemMiddle": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "double",
                "params": [
                    "Comparable",
                    "Comparable",
                    "CategoryDataset",
                    "CategoryAxis",
                    "Rectangle2D",
                    "RectangleEdge"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "double",
                "params": [
                    "Comparable",
                    "Comparable",
                    "CategoryDataset",
                    "CategoryAxis",
                    "Rectangle2D",
                    "RectangleEdge"
                ],
                "itype": "METHOD"
            }
        ],
        "getDomainAxis": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "CategoryAxis",
                "params": [
                    "CategoryPlot",
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "drawDomainMarker": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "CategoryMarker",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "CategoryMarker",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "getToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryToolTipGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryToolTipGenerator",
                "params": [
                    "int",
                    "int",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "drawItemLabel": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "protected ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "PlotOrientation",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "double",
                    "double",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "getBaseItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryItemLabelGenerator",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryItemLabelGenerator",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "getPassCount": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "int",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "equals": [
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public ",
                "cnt": 852,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public ",
                "cnt": 416,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "Layer",
                "modifier": "public ",
                "cnt": 495,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "public ",
                "cnt": 1687,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "SortOrder",
                "modifier": "public ",
                "cnt": 323,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 7,
                "dtype": "boolean",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            }
        ],
        "drawDomainLine": [
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D",
                    "double",
                    "Paint",
                    "Stroke"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "Rectangle2D",
                    "double",
                    "Paint",
                    "Stroke"
                ],
                "itype": "METHOD"
            }
        ],
        "clone": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 465,
                "dtype": "Object",
                "params": [
                    "Object"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractRenderer",
                "modifier": "protected ",
                "cnt": 1,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 11,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "PublicCloneable",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "hitTest": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "boolean",
                "params": [
                    "double",
                    "double",
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "boolean",
                "params": [
                    "double",
                    "double",
                    "Graphics2D",
                    "Rectangle2D",
                    "CategoryPlot",
                    "CategoryAxis",
                    "ValueAxis",
                    "CategoryDataset",
                    "int",
                    "int",
                    "boolean",
                    "CategoryItemRendererState"
                ],
                "itype": "METHOD"
            }
        ],
        "getDrawingSupplier": [
            {
                "scope": "AbstractRenderer",
                "modifier": "public abstract ",
                "cnt": 1,
                "dtype": "DrawingSupplier",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "DrawingSupplier",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "getSeriesToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "CategoryToolTipGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "CategoryToolTipGenerator",
                "params": [
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "drawRangeMarker": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "public ",
                "cnt": 2,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "ValueAxis",
                    "Marker",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "CategoryItemRenderer",
                "modifier": "public ",
                "cnt": 1,
                "dtype": "void",
                "params": [
                    "Graphics2D",
                    "CategoryPlot",
                    "ValueAxis",
                    "Marker",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "foregroundAnnotations": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "List",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "List",
                "itype": "VAR"
            }
        ],
        "itemLabelGeneratorList": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            }
        ],
        "backgroundAnnotations": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "List",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "List",
                "itype": "VAR"
            }
        ],
        "baseToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategoryToolTipGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategoryToolTipGenerator",
                "itype": "VAR"
            }
        ],
        "legendItemToolTipGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            }
        ],
        "columnCount": [
            {
                "scope": "createCategoryDataset",
                "cnt": 36,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForRow",
                "cnt": 36,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 36,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 36,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private transient ",
                "cnt": 1,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 36,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "toolTipGeneratorList": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            }
        ],
        "urlGeneratorList": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "ObjectList",
                "itype": "VAR"
            }
        ],
        "legendItemURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            }
        ],
        "baseURLGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategoryURLGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategoryURLGenerator",
                "itype": "VAR"
            }
        ],
        "serialVersionUID": [
            {
                "scope": "Layer",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "cnt": 5,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "Layer",
                "cnt": 5,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "cnt": 18,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "AbstractRenderer",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "modifier": "private static final ",
                "cnt": 1,
                "dtype": "long",
                "itype": "VAR"
            }
        ],
        "plot": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategoryPlot",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 28,
                "dtype": "CategoryPlot",
                "itype": "VAR"
            }
        ],
        "legendItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategorySeriesLabelGenerator",
                "itype": "VAR"
            }
        ],
        "rowCount": [
            {
                "scope": "createPieDatasetForColumn",
                "cnt": 15,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 15,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private transient ",
                "cnt": 1,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 15,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "baseItemLabelGenerator": [
            {
                "scope": "AbstractCategoryItemRenderer",
                "cnt": 1,
                "dtype": "CategoryItemLabelGenerator",
                "itype": "VAR"
            },
            {
                "scope": "AbstractCategoryItemRenderer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "CategoryItemLabelGenerator",
                "itype": "VAR"
            }
        ],
        "rs": [
            {
                "scope": "initialise",
                "cnt": 1,
                "dtype": "RenderingSource",
                "itype": "VAR"
            }
        ],
        "row": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 83,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForRow",
                "cnt": 83,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 166,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createState",
                "cnt": 22,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "label": [
            {
                "scope": "drawDomainMarker",
                "cnt": 9,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "drawItemLabel",
                "cnt": 9,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 18,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItem",
                "cnt": 9,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "cp": [
            {
                "scope": "getDrawingSupplier",
                "cnt": 2,
                "dtype": "CategoryPlot",
                "itype": "VAR"
            }
        ],
        "p": [
            {
                "scope": "getLegendItem",
                "cnt": 5,
                "dtype": "CategoryPlot",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 5,
                "dtype": "Paint",
                "itype": "VAR"
            }
        ],
        "visibleSeriesCount": [
            {
                "scope": "createState",
                "cnt": 4,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "orientation": [
            {
                "scope": "drawRangeLine",
                "cnt": 24,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "equals",
                "cnt": 603,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 48,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainLine",
                "cnt": 24,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 24,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            }
        ],
        "line": [
            {
                "scope": "createTextBlock",
                "cnt": 98,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 22,
                "dtype": "Line2D",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeLine",
                "cnt": 22,
                "dtype": "Line2D",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainLine",
                "cnt": 22,
                "dtype": "Line2D",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 66,
                "dtype": "Line2D",
                "itype": "VAR"
            }
        ],
        "state": [
            {
                "scope": "initialise",
                "cnt": 5,
                "dtype": "CategoryItemRendererState",
                "itype": "VAR"
            },
            {
                "scope": "createState",
                "cnt": 5,
                "dtype": "CategoryItemRendererState",
                "itype": "VAR"
            }
        ],
        "end": [
            {
                "scope": "nextLineBreak",
                "cnt": 150,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 4,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "y0": [
            {
                "scope": "drawRangeMarker",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "y1": [
            {
                "scope": "drawRangeMarker",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "generator": [
            {
                "scope": "addEntity",
                "cnt": 26,
                "dtype": "CategoryToolTipGenerator",
                "itype": "VAR"
            },
            {
                "scope": "getURLGenerator",
                "cnt": 26,
                "dtype": "CategoryURLGenerator",
                "itype": "VAR"
            },
            {
                "scope": "drawItemLabel",
                "cnt": 26,
                "dtype": "CategoryItemLabelGenerator",
                "itype": "VAR"
            },
            {
                "scope": "getItemLabelGenerator",
                "cnt": 26,
                "dtype": "CategoryItemLabelGenerator",
                "itype": "VAR"
            }
        ],
        "visibleSeries": [
            {
                "scope": "createState",
                "cnt": 2,
                "dtype": "int[]",
                "itype": "VAR"
            }
        ],
        "v1": [
            {
                "scope": "drawDomainMarker",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "labelFont": [
            {
                "scope": "drawItemLabel",
                "cnt": 4,
                "dtype": "Font",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 4,
                "dtype": "Font",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 8,
                "dtype": "Font",
                "itype": "VAR"
            }
        ],
        "dataset": [
            {
                "scope": "getLegendItem",
                "cnt": 35,
                "dtype": "CategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 35,
                "dtype": "CategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItems",
                "cnt": 35,
                "dtype": "CategoryDataset",
                "itype": "VAR"
            }
        ],
        "v": [
            {
                "scope": "drawDomainMarker",
                "cnt": 12,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 174,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 12,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeLine",
                "cnt": 12,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 87,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 174,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "columnIndex": [
            {
                "scope": "drawDomainMarker",
                "cnt": 4,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "r": [
            {
                "scope": "createCategoryDataset",
                "cnt": 292,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "addEntity",
                "cnt": 5,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 73,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "gp": [
            {
                "scope": "drawRangeMarker",
                "cnt": 3,
                "dtype": "GradientPaint",
                "itype": "VAR"
            }
        ],
        "urlText": [
            {
                "scope": "getLegendItem",
                "cnt": 2,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "t": [
            {
                "scope": "drawRangeMarker",
                "cnt": 2,
                "dtype": "GradientPaintTransformer",
                "itype": "VAR"
            }
        ],
        "start2d": [
            {
                "scope": "drawRangeMarker",
                "cnt": 6,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "bounds": [
            {
                "scope": "drawDomainMarker",
                "cnt": 5,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 230,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 230,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "getTextBounds",
                "cnt": 230,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 460,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "hitTest",
                "cnt": 5,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            }
        ],
        "anchor": [
            {
                "scope": "drawRangeMarker",
                "cnt": 10,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 5,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "description": [
            {
                "scope": "getLegendItem",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "item": [
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 304,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 608,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 912,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 608,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItem",
                "cnt": 11,
                "dtype": "LegendItem",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 304,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 1520,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 608,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 608,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "deepClone",
                "cnt": 2996,
                "dtype": "Object",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 608,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 304,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 304,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItems",
                "cnt": 22,
                "dtype": "LegendItem",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 304,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "datasetIndex": [
            {
                "scope": "getDomainAxis",
                "cnt": 5,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "s": [
            {
                "scope": "findRangeBounds",
                "cnt": 7,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "calculateStackTotal",
                "cnt": 32,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 32,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "addEntity",
                "cnt": 7,
                "dtype": "Shape",
                "itype": "VAR"
            }
        ],
        "annotation": [
            {
                "scope": "drawAnnotations",
                "cnt": 7,
                "dtype": "CategoryAnnotation",
                "itype": "VAR"
            }
        ],
        "anchorPoint": [
            {
                "scope": "drawItemLabel",
                "cnt": 2,
                "dtype": "Point2D",
                "itype": "VAR"
            }
        ],
        "savedComposite": [
            {
                "scope": "drawRangeMarker",
                "cnt": 6,
                "dtype": "Composite",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 3,
                "dtype": "Composite",
                "itype": "VAR"
            }
        ],
        "urlster": [
            {
                "scope": "addEntity",
                "cnt": 2,
                "dtype": "CategoryURLGenerator",
                "itype": "VAR"
            }
        ],
        "paint": [
            {
                "scope": "getLegendItem",
                "cnt": 5,
                "dtype": "Paint",
                "itype": "VAR"
            },
            {
                "scope": "drawItemLabel",
                "cnt": 5,
                "dtype": "Paint",
                "itype": "VAR"
            }
        ],
        "selectionState": [
            {
                "scope": "initialise",
                "cnt": 4,
                "dtype": "CategoryDatasetSelectionState",
                "itype": "VAR"
            }
        ],
        "x0": [
            {
                "scope": "drawRangeMarker",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "result": [
            {
                "scope": "getRangeAxis",
                "cnt": 19,
                "dtype": "ValueAxis",
                "itype": "VAR"
            },
            {
                "scope": "coordinates",
                "cnt": 554,
                "dtype": "Point2D",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForRow",
                "cnt": 200,
                "dtype": "DefaultPieDataset",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 1932,
                "dtype": "float[]",
                "itype": "VAR"
            },
            {
                "scope": "findRangeBounds",
                "cnt": 800,
                "dtype": "Range",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 400,
                "dtype": "Range",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItems",
                "cnt": 19,
                "dtype": "LegendItemCollection",
                "itype": "VAR"
            },
            {
                "scope": "deepClone",
                "cnt": 4838,
                "dtype": "Collection",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 200,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForColumn",
                "cnt": 200,
                "dtype": "DefaultPieDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 200,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 200,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "getDrawingSupplier",
                "cnt": 19,
                "dtype": "DrawingSupplier",
                "itype": "VAR"
            },
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 1932,
                "dtype": "Shape",
                "itype": "VAR"
            },
            {
                "scope": "hashCode",
                "cnt": 4857,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findDomainBounds",
                "cnt": 400,
                "dtype": "Range",
                "itype": "VAR"
            },
            {
                "scope": "createRectangle",
                "cnt": 554,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 200,
                "dtype": "DefaultPieDataset",
                "itype": "VAR"
            },
            {
                "scope": "createTextBlock",
                "cnt": 1932,
                "dtype": "TextBlock",
                "itype": "VAR"
            },
            {
                "scope": "createCategoryDataset",
                "cnt": 800,
                "dtype": "DefaultCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "readResolve",
                "cnt": 3435,
                "dtype": "Object",
                "itype": "VAR"
            },
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 966,
                "dtype": "float[]",
                "itype": "VAR"
            },
            {
                "scope": "readResolve",
                "cnt": 554,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "getToolTipGenerator",
                "cnt": 19,
                "dtype": "CategoryToolTipGenerator",
                "itype": "VAR"
            },
            {
                "scope": "readResolve",
                "cnt": 846,
                "dtype": "Layer",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 200,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "that": [
            {
                "scope": "equals",
                "cnt": 70,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            },
            {
                "scope": "equals",
                "cnt": 17,
                "dtype": "SortOrder",
                "itype": "VAR"
            },
            {
                "scope": "equals",
                "cnt": 11,
                "dtype": "AbstractCategoryItemRenderer",
                "itype": "VAR"
            }
        ],
        "anchorRect": [
            {
                "scope": "calculateRangeMarkerTextAnchorPoint",
                "cnt": 6,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            },
            {
                "scope": "calculateDomainMarkerTextAnchorPoint",
                "cnt": 6,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            }
        ],
        "key": [
            {
                "scope": "createHotSpotBounds",
                "cnt": 1,
                "dtype": "Comparable",
                "itype": "VAR"
            }
        ],
        "visibleSeriesTemp": [
            {
                "scope": "createState",
                "cnt": 2,
                "dtype": "int[]",
                "itype": "VAR"
            }
        ],
        "iterator": [
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 95,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "deepClone",
                "cnt": 1258,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "drawAnnotations",
                "cnt": 4,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 190,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 855,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 95,
                "dtype": "Iterator",
                "itype": "VAR"
            },
            {
                "scope": "createTextBlock",
                "cnt": 310,
                "dtype": "BreakIterator",
                "itype": "VAR"
            }
        ],
        "visibleSeriesKeys": [
            {
                "scope": "findRangeBounds",
                "cnt": 2,
                "dtype": "List",
                "itype": "VAR"
            }
        ],
        "low": [
            {
                "scope": "drawRangeMarker",
                "cnt": 8,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "high": [
            {
                "scope": "drawRangeMarker",
                "cnt": 6,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "rect": [
            {
                "scope": "drawRangeMarker",
                "cnt": 5,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            }
        ],
        "scd": [
            {
                "scope": "initialise",
                "cnt": 1,
                "dtype": "SelectableCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 8,
                "dtype": "StatisticalCategoryDataset",
                "itype": "VAR"
            }
        ],
        "coordinates": [
            {
                "scope": "RectangleAnchor",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Point2D",
                "params": [
                    "Rectangle2D",
                    "RectangleAnchor"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 12,
                "dtype": "Point2D",
                "itype": "VAR"
            },
            {
                "scope": "drawDomainMarker",
                "cnt": 6,
                "dtype": "Point2D",
                "itype": "VAR"
            }
        ],
        "category": [
            {
                "scope": "drawDomainMarker",
                "cnt": 1,
                "dtype": "Comparable",
                "itype": "VAR"
            }
        ],
        "y": [
            {
                "scope": "isEmptyOrNull",
                "cnt": 33,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "createHotSpotBounds",
                "cnt": 3,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 33,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 33,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "labelPaint": [
            {
                "scope": "getLegendItem",
                "cnt": 2,
                "dtype": "Paint",
                "itype": "VAR"
            }
        ],
        "pc": [
            {
                "scope": "clone",
                "cnt": 156,
                "dtype": "PublicCloneable",
                "itype": "VAR"
            }
        ],
        "value": [
            {
                "scope": "calculateStackTotal",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 201,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 201,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 402,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 402,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 201,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 9,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 201,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 402,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 201,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "toolTipText": [
            {
                "scope": "getLegendItem",
                "cnt": 2,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "shape": [
            {
                "scope": "getLegendItem",
                "cnt": 1,
                "dtype": "Shape",
                "itype": "VAR"
            }
        ],
        "vm": [
            {
                "scope": "drawRangeMarker",
                "cnt": 1,
                "dtype": "ValueMarker",
                "itype": "VAR"
            }
        ],
        "tip": [
            {
                "scope": "addEntity",
                "cnt": 2,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "outlineStroke": [
            {
                "scope": "getLegendItem",
                "cnt": 1,
                "dtype": "Stroke",
                "itype": "VAR"
            }
        ],
        "yy": [
            {
                "scope": "createHotSpotBounds",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 7,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "cri": [
            {
                "scope": "initialise",
                "cnt": 2,
                "dtype": "ChartRenderingInfo",
                "itype": "VAR"
            }
        ],
        "range": [
            {
                "scope": "drawRangeLine",
                "cnt": 7,
                "dtype": "Range",
                "itype": "VAR"
            },
            {
                "scope": "drawRangeMarker",
                "cnt": 14,
                "dtype": "Range",
                "itype": "VAR"
            }
        ],
        "xx": [
            {
                "scope": "createHotSpotBounds",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "seriesCount": [
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItems",
                "cnt": 3,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findRangeBounds",
                "cnt": 3,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 171,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "calculateStackTotal",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 114,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 114,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 57,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "index": [
            {
                "scope": "getLegendItems",
                "cnt": 4,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "convertName",
                "cnt": 581,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createTextBlock",
                "cnt": 108,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "removed": [
            {
                "scope": "removeAnnotation",
                "cnt": 3,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "i": [
            {
                "scope": "sampleFunction2DToSeries",
                "cnt": 61,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createCategoryDataset",
                "cnt": 61,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForColumn",
                "cnt": 61,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "getLegendItems",
                "cnt": 16,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 61,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "area": [
            {
                "scope": "drawDomainMarker",
                "cnt": 5,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            }
        ],
        "x1": [
            {
                "scope": "drawRangeMarker",
                "cnt": 2,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "v0": [
            {
                "scope": "drawDomainMarker",
                "cnt": 4,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "w": [
            {
                "scope": "addEntity",
                "cnt": 4,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "createRectangle",
                "cnt": 59,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "url": [
            {
                "scope": "getResourceRelativeAsStream",
                "cnt": 448,
                "dtype": "URL",
                "itype": "VAR"
            },
            {
                "scope": "addEntity",
                "cnt": 2,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "getResourceAsStream",
                "cnt": 448,
                "dtype": "URL",
                "itype": "VAR"
            }
        ],
        "end2d": [
            {
                "scope": "drawRangeMarker",
                "cnt": 6,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "start": [
            {
                "scope": "drawRangeMarker",
                "cnt": 4,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "createTextBlock",
                "cnt": 118,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "outlinePaint": [
            {
                "scope": "getLegendItem",
                "cnt": 1,
                "dtype": "Paint",
                "itype": "VAR"
            }
        ],
        "position": [
            {
                "scope": "drawItemLabel",
                "cnt": 6,
                "dtype": "ItemLabelPosition",
                "itype": "VAR"
            }
        ],
        "entity": [
            {
                "scope": "addEntity",
                "cnt": 1,
                "dtype": "CategoryItemEntity",
                "itype": "VAR"
            }
        ],
        "im": [
            {
                "scope": "drawRangeMarker",
                "cnt": 9,
                "dtype": "IntervalMarker",
                "itype": "VAR"
            }
        ],
        "\"Null 'orientation' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'generator' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Unknown layer.\"": [
            {
                "cnt": 2,
                "itype": "STRING"
            }
        ],
        "\"Null 'stroke' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'annotation' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'hotspot' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Not implemented.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Base tool tip generator not cloneable.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'plot' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"ItemLabelGenerator not cloneable.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'paint' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Base item URL generator not cloneable.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "0": [
            {
                "cnt": 109,
                "itype": "INT"
            }
        ],
        "1": [
            {
                "cnt": 24,
                "itype": "INT"
            }
        ],
        "2": [
            {
                "cnt": 9,
                "itype": "INT"
            }
        ],
        "4": [
            {
                "cnt": 2,
                "itype": "INT"
            }
        ],
        "Layer": [
            {
                "methods": [
                    "readResolve",
                    "hashCode",
                    "equals",
                    "toString"
                ],
                "scope": "Layer",
                "cnt": 4,
                "supers": [
                    "Serializable"
                ],
                "fields": [
                    "FOREGROUND",
                    "serialVersionUID",
                    "name",
                    "BACKGROUND"
                ],
                "constructors": [
                    [
                        "String"
                    ]
                ],
                "itype": "TYPE"
            }
        ],
        "readResolve": [
            {
                "scope": "SortOrder",
                "modifier": "private ",
                "cnt": 2,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "private ",
                "cnt": 19,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "private ",
                "cnt": 6,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "Layer",
                "modifier": "private ",
                "cnt": 6,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "private ",
                "cnt": 3,
                "dtype": "Object",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "toString": [
            {
                "scope": "Layer",
                "modifier": "public ",
                "cnt": 55,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "public ",
                "cnt": 191,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public ",
                "cnt": 144,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "SortOrder",
                "modifier": "public ",
                "cnt": 35,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public ",
                "cnt": 64,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "FOREGROUND": [
            {
                "scope": "Layer",
                "cnt": 5,
                "dtype": "Layer",
                "itype": "VAR"
            },
            {
                "scope": "Layer",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "Layer",
                "itype": "VAR"
            }
        ],
        "name": [
            {
                "scope": "Layer",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "cnt": 362,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "Layer",
                "cnt": 239,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "cnt": 104,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "cnt": 49,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "private ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "cnt": 142,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "BACKGROUND": [
            {
                "scope": "Layer",
                "cnt": 5,
                "dtype": "Layer",
                "itype": "VAR"
            },
            {
                "scope": "Layer",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "Layer",
                "itype": "VAR"
            }
        ],
        "layer": [
            {
                "scope": "equals",
                "cnt": 35,
                "dtype": "Layer",
                "itype": "VAR"
            }
        ],
        "\"Layer.BACKGROUND\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Layer.FOREGROUND\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "DatasetUtilities": [
            {
                "methods": [
                    "createPieDatasetForColumn",
                    "createConsolidatedPieDataset",
                    "iterateCategoryRangeBounds",
                    "findMinimumRangeValue",
                    "iterateToFindRangeBounds",
                    "findDomainBounds",
                    "findMaximumRangeValue",
                    "createCategoryDataset",
                    "isEmptyOrNull",
                    "iterateRangeBounds",
                    "findMinimumDomainValue",
                    "sampleFunction2D",
                    "iterateDomainBounds",
                    "iterateToFindDomainBounds",
                    "calculateStackTotal",
                    "findRangeBounds",
                    "findMinimumStackedRangeValue",
                    "findStackedRangeBounds",
                    "findMaximumDomainValue",
                    "findMaximumStackedRangeValue",
                    "iterateXYRangeBounds",
                    "sampleFunction2DToSeries",
                    "findCumulativeRangeBounds",
                    "calculatePieDatasetTotal",
                    "createPieDatasetForRow"
                ],
                "scope": "DatasetUtilities",
                "cnt": 2,
                "supers": [],
                "fields": [],
                "constructors": [
                    []
                ],
                "itype": "TYPE"
            }
        ],
        "createPieDatasetForColumn": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "PieDataset",
                "params": [
                    "CategoryDataset",
                    "Comparable"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "PieDataset",
                "params": [
                    "CategoryDataset",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "createConsolidatedPieDataset": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "PieDataset",
                "params": [
                    "PieDataset",
                    "Comparable",
                    "double"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "PieDataset",
                "params": [
                    "PieDataset",
                    "Comparable",
                    "double",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateCategoryRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "findMinimumRangeValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "Number",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateToFindRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "List",
                    "Range",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 7,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "List",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "findDomainBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "List",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "Range",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "findMaximumRangeValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "Number",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "createCategoryDataset": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "CategoryDataset",
                "params": [
                    "String",
                    "String",
                    "Number[][]"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "CategoryDataset",
                "params": [
                    "Comparable",
                    "KeyedValues"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "CategoryDataset",
                "params": [
                    "String",
                    "String",
                    "double[][]"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "CategoryDataset",
                "params": [
                    "Comparable[]",
                    "Comparable[]",
                    "double[][]"
                ],
                "itype": "METHOD"
            }
        ],
        "isEmptyOrNull": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "boolean",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "boolean",
                "params": [
                    "PieDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 2,
                "dtype": "boolean",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 18,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 19,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 18,
                "dtype": "Range",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 18,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "findMinimumDomainValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "sampleFunction2D": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "XYDataset",
                "params": [
                    "Function2D",
                    "double",
                    "double",
                    "int",
                    "Comparable"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateDomainBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "boolean"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 7,
                "dtype": "Range",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateToFindDomainBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "Range",
                "params": [
                    "XYDataset",
                    "List",
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "calculateStackTotal": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "double",
                "params": [
                    "TableXYDataset",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "findMinimumStackedRangeValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "findStackedRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "TableXYDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "double"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 7,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "TableXYDataset",
                    "double"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 6,
                "dtype": "Range",
                "params": [
                    "CategoryDataset",
                    "KeyToGroupMap"
                ],
                "itype": "METHOD"
            }
        ],
        "findMaximumDomainValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "findMaximumStackedRangeValue": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Number",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "iterateXYRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "XYDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "sampleFunction2DToSeries": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "XYSeries",
                "params": [
                    "Function2D",
                    "double",
                    "double",
                    "int",
                    "Comparable"
                ],
                "itype": "METHOD"
            }
        ],
        "findCumulativeRangeBounds": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Range",
                "params": [
                    "CategoryDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "calculatePieDatasetTotal": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "double",
                "params": [
                    "PieDataset"
                ],
                "itype": "METHOD"
            }
        ],
        "createPieDatasetForRow": [
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 4,
                "dtype": "PieDataset",
                "params": [
                    "CategoryDataset",
                    "Comparable"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "DatasetUtilities",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "PieDataset",
                "params": [
                    "CategoryDataset",
                    "int"
                ],
                "itype": "METHOD"
            }
        ],
        "maximum": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 504,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 252,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 504,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 252,
                "dtype": "double[]",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 252,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 252,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 252,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 252,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 504,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 504,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "total": [
            {
                "scope": "calculateStackTotal",
                "cnt": 30,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 30,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 30,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 30,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "itemCount": [
            {
                "scope": "iterateRangeBounds",
                "cnt": 180,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 120,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 60,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 120,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 300,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 120,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 120,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 60,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 60,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "info": [
            {
                "scope": "findRangeBounds",
                "cnt": 46,
                "dtype": "CategoryRangeInfo",
                "itype": "VAR"
            },
            {
                "scope": "findRangeBounds",
                "cnt": 46,
                "dtype": "XYRangeInfo",
                "itype": "VAR"
            },
            {
                "scope": "findDomainBounds",
                "cnt": 46,
                "dtype": "DomainInfo",
                "itype": "VAR"
            },
            {
                "scope": "findDomainBounds",
                "cnt": 46,
                "dtype": "XYDomainInfo",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 92,
                "dtype": "RangeInfo",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 46,
                "dtype": "DomainInfo",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 46,
                "dtype": "DomainInfo",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 92,
                "dtype": "RangeInfo",
                "itype": "VAR"
            },
            {
                "scope": "findRangeBounds",
                "cnt": 92,
                "dtype": "RangeInfo",
                "itype": "VAR"
            }
        ],
        "uvalue": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 180,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 270,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 90,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 90,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 90,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 180,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "rowKey": [
            {
                "scope": "createCategoryDataset",
                "cnt": 25,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForColumn",
                "cnt": 25,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "createCategoryDataset",
                "cnt": 50,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "current": [
            {
                "scope": "nextLineBreak",
                "cnt": 158,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForRow",
                "cnt": 18,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 18,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "createTextBlock",
                "cnt": 158,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "series": [
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 356,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 1068,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 712,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 712,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 356,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 3204,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 712,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 712,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 712,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 356,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 356,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "sampleFunction2DToSeries",
                "cnt": 356,
                "dtype": "XYSeries",
                "itype": "VAR"
            },
            {
                "scope": "sampleFunction2D",
                "cnt": 356,
                "dtype": "XYSeries",
                "itype": "VAR"
            }
        ],
        "bx": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 21,
                "dtype": "BoxAndWhiskerCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 21,
                "dtype": "BoxAndWhiskerXYDataset",
                "itype": "VAR"
            }
        ],
        "n": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 6,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "icd": [
            {
                "scope": "findMaximumRangeValue",
                "cnt": 21,
                "dtype": "IntervalCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 21,
                "dtype": "IntervalCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 21,
                "dtype": "IntervalCategoryDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 21,
                "dtype": "IntervalCategoryDataset",
                "itype": "VAR"
            }
        ],
        "c": [
            {
                "scope": "createCategoryDataset",
                "cnt": 135,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "loadAndInstantiate",
                "cnt": 3150,
                "dtype": "Class",
                "itype": "VAR"
            },
            {
                "scope": "isEmptyOrNull",
                "cnt": 45,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "hasValidData": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 18,
                "dtype": "boolean",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 18,
                "dtype": "boolean",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 18,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "number": [
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 24,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 24,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 48,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "keys": [
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 9,
                "dtype": "List",
                "itype": "VAR"
            },
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 9,
                "dtype": "List",
                "itype": "VAR"
            }
        ],
        "minimum": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 267,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 534,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 534,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 267,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 267,
                "dtype": "double[]",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 267,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 267,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 267,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 534,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 534,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "highLowData": [
            {
                "scope": "findMinimumRangeValue",
                "cnt": 6,
                "dtype": "OHLCDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumRangeValue",
                "cnt": 6,
                "dtype": "OHLCDataset",
                "itype": "VAR"
            }
        ],
        "lvalue": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 192,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 288,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 96,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 96,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 96,
                "dtype": "Number",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 192,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "std": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 15,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "categoryCount": [
            {
                "scope": "findMinimumStackedRangeValue",
                "cnt": 12,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 24,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumStackedRangeValue",
                "cnt": 12,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "column": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 113,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForColumn",
                "cnt": 113,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 226,
                "dtype": "int",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 452,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "seriesNo": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 9,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "mean": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 9,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "ohlc": [
            {
                "scope": "iterateRangeBounds",
                "cnt": 15,
                "dtype": "OHLCDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 15,
                "dtype": "OHLCDataset",
                "itype": "VAR"
            }
        ],
        "ixyd": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 24,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 24,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateRangeBounds",
                "cnt": 24,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            }
        ],
        "columnKey": [
            {
                "scope": "createCategoryDataset",
                "cnt": 21,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "createPieDatasetForRow",
                "cnt": 21,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "createCategoryDataset",
                "cnt": 42,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "x": [
            {
                "scope": "nextLineBreak",
                "cnt": 186,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 116,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "sampleFunction2DToSeries",
                "cnt": 29,
                "dtype": "double",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 29,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "intervalXYData": [
            {
                "scope": "findMaximumRangeValue",
                "cnt": 21,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "iterateDomainBounds",
                "cnt": 21,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumDomainValue",
                "cnt": 21,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMinimumRangeValue",
                "cnt": 21,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            },
            {
                "scope": "findMaximumDomainValue",
                "cnt": 21,
                "dtype": "IntervalXYDataset",
                "itype": "VAR"
            }
        ],
        "valueIterator": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 6,
                "dtype": "Iterator",
                "itype": "VAR"
            }
        ],
        "totalValue": [
            {
                "scope": "calculatePieDatasetTotal",
                "cnt": 9,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "groupIndex": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 15,
                "dtype": "int[]",
                "itype": "VAR"
            }
        ],
        "collection": [
            {
                "scope": "sampleFunction2D",
                "cnt": 3,
                "dtype": "XYSeriesCollection",
                "itype": "VAR"
            }
        ],
        "groupCount": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 18,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "positive": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 27,
                "dtype": "double[]",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 54,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "currentKey": [
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 30,
                "dtype": "Comparable",
                "itype": "VAR"
            }
        ],
        "g": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 24,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "runningTotal": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 12,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "otherKeys": [
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 12,
                "dtype": "ArrayList",
                "itype": "VAR"
            }
        ],
        "negative": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 29,
                "dtype": "double[]",
                "itype": "VAR"
            },
            {
                "scope": "findStackedRangeBounds",
                "cnt": 58,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "o": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 6,
                "dtype": "Object",
                "itype": "VAR"
            }
        ],
        "dataValue": [
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 30,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "step": [
            {
                "scope": "sampleFunction2DToSeries",
                "cnt": 3,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "values": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 3,
                "dtype": "List",
                "itype": "VAR"
            }
        ],
        "seriesKey": [
            {
                "scope": "iterateToFindDomainBounds",
                "cnt": 84,
                "dtype": "Comparable",
                "itype": "VAR"
            },
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 378,
                "dtype": "Comparable",
                "itype": "VAR"
            }
        ],
        "mvcd": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 3,
                "dtype": "MultiValueCategoryDataset",
                "itype": "VAR"
            }
        ],
        "stdN": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 6,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "otherValue": [
            {
                "scope": "createConsolidatedPieDataset",
                "cnt": 6,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "allItemsNull": [
            {
                "scope": "findCumulativeRangeBounds",
                "cnt": 6,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "itemNo": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 9,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "meanN": [
            {
                "scope": "iterateToFindRangeBounds",
                "cnt": 6,
                "dtype": "Number",
                "itype": "VAR"
            }
        ],
        "j": [
            {
                "scope": "findStackedRangeBounds",
                "cnt": 12,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "\"The number of row keys does not match the number of rows in \"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'rowKey' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'rowData' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"the data array.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Requires 'start' < 'end'.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'rowKeys' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Duplicate items in 'columnKeys'.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'dataset' argument.\"": [
            {
                "cnt": 23,
                "itype": "STRING"
            }
        ],
        "\"Null 'xRange' argument\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Requires 'samples' > 1\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'columnKeys' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'f' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Duplicate items in 'rowKeys'.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"The number of column keys does not match the number of \"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'visibleSeriesKeys' argument.\"": [
            {
                "cnt": 3,
                "itype": "STRING"
            }
        ],
        "\"Null 'seriesKey' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"columns in the data array.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "PlotOrientation": [
            {
                "methods": [
                    "readResolve",
                    "hashCode",
                    "equals",
                    "toString"
                ],
                "scope": "PlotOrientation",
                "cnt": 4,
                "supers": [
                    "Serializable"
                ],
                "fields": [
                    "serialVersionUID",
                    "VERTICAL",
                    "name",
                    "HORIZONTAL"
                ],
                "constructors": [
                    [
                        "String"
                    ]
                ],
                "itype": "TYPE"
            }
        ],
        "VERTICAL": [
            {
                "scope": "PlotOrientation",
                "cnt": 18,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            }
        ],
        "HORIZONTAL": [
            {
                "scope": "PlotOrientation",
                "cnt": 18,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            },
            {
                "scope": "PlotOrientation",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "PlotOrientation",
                "itype": "VAR"
            }
        ],
        "\"PlotOrientation.VERTICAL\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"PlotOrientation.HORIZONTAL\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "TextUtilities": [
            {
                "methods": [
                    "nextLineBreak",
                    "getTextBounds",
                    "drawAlignedString",
                    "isUseDrawRotatedStringWorkaround",
                    "createTextBlock",
                    "deriveTextBoundsAnchorOffsets",
                    "getUseFontMetricsGetStringBounds",
                    "deriveRotationAnchorOffsets",
                    "drawRotatedString",
                    "setUseDrawRotatedStringWorkaround",
                    "calculateRotatedStringBounds",
                    "setUseFontMetricsGetStringBounds"
                ],
                "scope": "TextUtilities",
                "cnt": 5,
                "supers": [],
                "fields": [
                    "useDrawRotatedStringWorkaround",
                    "useFontMetricsGetStringBounds"
                ],
                "constructors": [
                    []
                ],
                "itype": "TYPE"
            }
        ],
        "nextLineBreak": [
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 11,
                "dtype": "int",
                "params": [
                    "String",
                    "int",
                    "float",
                    "BreakIterator",
                    "TextMeasurer"
                ],
                "itype": "METHOD"
            }
        ],
        "getTextBounds": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 41,
                "dtype": "Rectangle2D",
                "params": [
                    "String",
                    "Graphics2D",
                    "FontMetrics"
                ],
                "itype": "METHOD"
            }
        ],
        "drawAlignedString": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "Rectangle2D",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "TextAnchor"
                ],
                "itype": "METHOD"
            }
        ],
        "isUseDrawRotatedStringWorkaround": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 5,
                "dtype": "boolean",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "createTextBlock": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 11,
                "dtype": "TextBlock",
                "params": [
                    "String",
                    "Font",
                    "Paint"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 10,
                "dtype": "TextBlock",
                "params": [
                    "String",
                    "Font",
                    "Paint",
                    "float",
                    "TextMeasurer"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 10,
                "dtype": "TextBlock",
                "params": [
                    "String",
                    "Font",
                    "Paint",
                    "float",
                    "int",
                    "TextMeasurer"
                ],
                "itype": "METHOD"
            }
        ],
        "deriveTextBoundsAnchorOffsets": [
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 40,
                "dtype": "float[]",
                "params": [
                    "Graphics2D",
                    "String",
                    "TextAnchor"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 41,
                "dtype": "float[]",
                "params": [
                    "Graphics2D",
                    "String",
                    "TextAnchor",
                    "Rectangle2D"
                ],
                "itype": "METHOD"
            }
        ],
        "getUseFontMetricsGetStringBounds": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 5,
                "dtype": "boolean",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "deriveRotationAnchorOffsets": [
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 21,
                "dtype": "float[]",
                "params": [
                    "Graphics2D",
                    "String",
                    "TextAnchor"
                ],
                "itype": "METHOD"
            }
        ],
        "drawRotatedString": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 34,
                "dtype": "void",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "double",
                    "float",
                    "float"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 34,
                "dtype": "void",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "TextAnchor",
                    "double",
                    "TextAnchor"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 35,
                "dtype": "void",
                "params": [
                    "String",
                    "Graphics2D",
                    "double",
                    "float",
                    "float"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 34,
                "dtype": "void",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "TextAnchor",
                    "double",
                    "float",
                    "float"
                ],
                "itype": "METHOD"
            }
        ],
        "setUseDrawRotatedStringWorkaround": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 5,
                "dtype": "void",
                "params": [
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "calculateRotatedStringBounds": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 11,
                "dtype": "Shape",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "TextAnchor",
                    "double",
                    "TextAnchor"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 10,
                "dtype": "Shape",
                "params": [
                    "String",
                    "Graphics2D",
                    "float",
                    "float",
                    "double",
                    "float",
                    "float"
                ],
                "itype": "METHOD"
            }
        ],
        "setUseFontMetricsGetStringBounds": [
            {
                "scope": "TextUtilities",
                "modifier": "public static ",
                "cnt": 5,
                "dtype": "void",
                "params": [
                    "boolean"
                ],
                "itype": "METHOD"
            }
        ],
        "useDrawRotatedStringWorkaround": [
            {
                "scope": "TextUtilities",
                "cnt": 40,
                "dtype": "boolean",
                "itype": "VAR"
            },
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 1,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "useFontMetricsGetStringBounds": [
            {
                "scope": "TextUtilities",
                "cnt": 30,
                "dtype": "boolean",
                "itype": "VAR"
            },
            {
                "scope": "TextUtilities",
                "modifier": "private static ",
                "cnt": 1,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "textBounds": [
            {
                "scope": "drawAlignedString",
                "cnt": 70,
                "dtype": "Rectangle2D",
                "itype": "VAR"
            }
        ],
        "rotate": [
            {
                "scope": "drawRotatedString",
                "cnt": 20,
                "dtype": "AffineTransform",
                "itype": "VAR"
            },
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 20,
                "dtype": "AffineTransform",
                "itype": "VAR"
            }
        ],
        "height": [
            {
                "scope": "getTextBounds",
                "cnt": 10,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "fm": [
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 90,
                "dtype": "FontMetrics",
                "itype": "VAR"
            },
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 90,
                "dtype": "FontMetrics",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 180,
                "dtype": "FontMetrics",
                "itype": "VAR"
            }
        ],
        "lastLine": [
            {
                "scope": "createTextBlock",
                "cnt": 30,
                "dtype": "TextLine",
                "itype": "VAR"
            }
        ],
        "width": [
            {
                "scope": "getTextBounds",
                "cnt": 30,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "leading": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 60,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 120,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "frc": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 30,
                "dtype": "FontRenderContext",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 60,
                "dtype": "FontRenderContext",
                "itype": "VAR"
            }
        ],
        "metrics": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 150,
                "dtype": "LineMetrics",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 300,
                "dtype": "LineMetrics",
                "itype": "VAR"
            }
        ],
        "ascent": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 40,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 80,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "translate": [
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 10,
                "dtype": "AffineTransform",
                "itype": "VAR"
            }
        ],
        "firstWord": [
            {
                "scope": "nextLineBreak",
                "cnt": 20,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "lastFragment": [
            {
                "scope": "createTextBlock",
                "cnt": 40,
                "dtype": "TextFragment",
                "itype": "VAR"
            }
        ],
        "newline": [
            {
                "scope": "nextLineBreak",
                "cnt": 40,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "moreInputToProcess": [
            {
                "scope": "createTextBlock",
                "cnt": 40,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "tl": [
            {
                "scope": "drawRotatedString",
                "cnt": 10,
                "dtype": "TextLayout",
                "itype": "VAR"
            }
        ],
        "f": [
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 128,
                "dtype": "Font",
                "itype": "VAR"
            }
        ],
        "input": [
            {
                "scope": "createTextBlock",
                "cnt": 90,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "isJava14": [
            {
                "scope": "TextUtilities",
                "cnt": 20,
                "dtype": "boolean",
                "itype": "VAR"
            }
        ],
        "descent": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 60,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 120,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "oldStr": [
            {
                "scope": "createTextBlock",
                "cnt": 30,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "lm": [
            {
                "scope": "getTextBounds",
                "cnt": 10,
                "dtype": "LineMetrics",
                "itype": "VAR"
            }
        ],
        "as": [
            {
                "scope": "drawRotatedString",
                "cnt": 10,
                "dtype": "AttributedString",
                "itype": "VAR"
            }
        ],
        "textAdj": [
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 100,
                "dtype": "float[]",
                "itype": "VAR"
            },
            {
                "scope": "drawRotatedString",
                "cnt": 200,
                "dtype": "float[]",
                "itype": "VAR"
            }
        ],
        "adjust": [
            {
                "scope": "drawAlignedString",
                "cnt": 50,
                "dtype": "float[]",
                "itype": "VAR"
            }
        ],
        "saved": [
            {
                "scope": "drawRotatedString",
                "cnt": 10,
                "dtype": "AffineTransform",
                "itype": "VAR"
            }
        ],
        "yAdj": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 180,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 360,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "halfAscent": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 30,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 60,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "translatedBounds": [
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 10,
                "dtype": "Shape",
                "itype": "VAR"
            }
        ],
        "xAdj": [
            {
                "scope": "deriveRotationAnchorOffsets",
                "cnt": 100,
                "dtype": "float",
                "itype": "VAR"
            },
            {
                "scope": "deriveTextBoundsAnchorOffsets",
                "cnt": 200,
                "dtype": "float",
                "itype": "VAR"
            }
        ],
        "newFragment": [
            {
                "scope": "createTextBlock",
                "cnt": 10,
                "dtype": "TextFragment",
                "itype": "VAR"
            }
        ],
        "lines": [
            {
                "scope": "createTextBlock",
                "cnt": 20,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "rotateAdj": [
            {
                "scope": "calculateRotatedStringBounds",
                "cnt": 40,
                "dtype": "float[]",
                "itype": "VAR"
            },
            {
                "scope": "drawRotatedString",
                "cnt": 40,
                "dtype": "float[]",
                "itype": "VAR"
            }
        ],
        "length": [
            {
                "scope": "createTextBlock",
                "cnt": 20,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "newStr": [
            {
                "scope": "createTextBlock",
                "cnt": 20,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "next": [
            {
                "scope": "createTextBlock",
                "cnt": 30,
                "dtype": "int",
                "itype": "VAR"
            }
        ],
        "\"\"": [
            {
                "cnt": 5,
                "itype": "STRING"
            }
        ],
        "\"\\n\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'text' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"...\"": [
            {
                "cnt": 2,
                "itype": "STRING"
            }
        ],
        "'\\n'": [
            {
                "cnt": 2,
                "itype": "CHAR"
            }
        ],
        "3": [
            {
                "cnt": 3,
                "itype": "INT"
            }
        ],
        "LengthAdjustmentType": [
            {
                "methods": [
                    "readResolve",
                    "hashCode",
                    "equals",
                    "toString"
                ],
                "scope": "LengthAdjustmentType",
                "cnt": 6,
                "supers": [
                    "Serializable"
                ],
                "fields": [
                    "EXPAND",
                    "serialVersionUID",
                    "name",
                    "CONTRACT",
                    "NO_CHANGE"
                ],
                "constructors": [
                    [
                        "String"
                    ]
                ],
                "itype": "TYPE"
            }
        ],
        "EXPAND": [
            {
                "scope": "LengthAdjustmentType",
                "cnt": 5,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            }
        ],
        "CONTRACT": [
            {
                "scope": "LengthAdjustmentType",
                "cnt": 5,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            }
        ],
        "NO_CHANGE": [
            {
                "scope": "LengthAdjustmentType",
                "cnt": 5,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            },
            {
                "scope": "LengthAdjustmentType",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "LengthAdjustmentType",
                "itype": "VAR"
            }
        ],
        "\"EXPAND\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"CONTRACT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"NO_CHANGE\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "RectangleAnchor": [
            {
                "methods": [
                    "createRectangle",
                    "readResolve",
                    "hashCode",
                    "equals",
                    "coordinates",
                    "toString"
                ],
                "scope": "RectangleAnchor",
                "cnt": 36,
                "supers": [
                    "Serializable"
                ],
                "fields": [
                    "CENTER",
                    "TOP_LEFT",
                    "serialVersionUID",
                    "TOP",
                    "BOTTOM_RIGHT",
                    "LEFT",
                    "TOP_RIGHT",
                    "name",
                    "RIGHT",
                    "BOTTOM",
                    "BOTTOM_LEFT"
                ],
                "constructors": [
                    [
                        "String"
                    ]
                ],
                "itype": "TYPE"
            }
        ],
        "createRectangle": [
            {
                "scope": "RectangleAnchor",
                "modifier": "public static ",
                "cnt": 3,
                "dtype": "Rectangle2D",
                "params": [
                    "Size2D",
                    "double",
                    "double",
                    "RectangleAnchor"
                ],
                "itype": "METHOD"
            }
        ],
        "CENTER": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "TOP_LEFT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "TOP": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "BOTTOM_RIGHT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "LEFT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "TOP_RIGHT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "RIGHT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "BOTTOM": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "BOTTOM_LEFT": [
            {
                "scope": "RectangleAnchor",
                "cnt": 2,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            },
            {
                "scope": "RectangleAnchor",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "h": [
            {
                "scope": "createRectangle",
                "cnt": 54,
                "dtype": "double",
                "itype": "VAR"
            }
        ],
        "order": [
            {
                "scope": "equals",
                "cnt": 3,
                "dtype": "RectangleAnchor",
                "itype": "VAR"
            }
        ],
        "\"RectangleAnchor.LEFT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.TOP\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.BOTTOM\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.BOTTOM_RIGHT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.TOP_LEFT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.TOP_RIGHT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.CENTER\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.BOTTOM_LEFT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"RectangleAnchor.RIGHT\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "ObjectUtilities": [
            {
                "methods": [
                    "getResource",
                    "loadAndInstantiate",
                    "getClassLoaderSource",
                    "getResourceAsStream",
                    "setClassLoaderSource",
                    "getClassLoader",
                    "setClassLoader",
                    "parseVersions",
                    "equal",
                    "isJDK14",
                    "hashCode",
                    "getResourceRelativeAsStream",
                    "clone",
                    "deepClone",
                    "getResourceRelative",
                    "convertName"
                ],
                "scope": "ObjectUtilities",
                "cnt": 3,
                "supers": [],
                "fields": [
                    "CLASS_CONTEXT",
                    "classLoader",
                    "classLoaderSource",
                    "THREAD_CONTEXT"
                ],
                "constructors": [
                    []
                ],
                "itype": "TYPE"
            }
        ],
        "getResource": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 316,
                "dtype": "URL",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "loadAndInstantiate": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 14,
                "dtype": "Object",
                "params": [
                    "String",
                    "Class",
                    "Class"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "Object",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "getClassLoaderSource": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "String",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "getResourceAsStream": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "InputStream",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "setClassLoaderSource": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "void",
                "params": [
                    "String"
                ],
                "itype": "METHOD"
            }
        ],
        "getClassLoader": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public synchronized static ",
                "cnt": 630,
                "dtype": "ClassLoader",
                "params": [
                    "Class"
                ],
                "itype": "METHOD"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 631,
                "dtype": "ClassLoader",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "setClassLoader": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public synchronized static ",
                "cnt": 15,
                "dtype": "void",
                "params": [
                    "ClassLoader"
                ],
                "itype": "METHOD"
            }
        ],
        "parseVersions": [
            {
                "scope": "ObjectUtilities",
                "modifier": "private static ",
                "cnt": 106,
                "dtype": "String[]",
                "params": [
                    "String"
                ],
                "itype": "METHOD"
            }
        ],
        "equal": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 165,
                "dtype": "boolean",
                "params": [
                    "Object",
                    "Object"
                ],
                "itype": "METHOD"
            }
        ],
        "isJDK14": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 52,
                "dtype": "boolean",
                "params": [],
                "itype": "METHOD"
            }
        ],
        "getResourceRelativeAsStream": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "InputStream",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "deepClone": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 15,
                "dtype": "Collection",
                "params": [
                    "Collection"
                ],
                "itype": "METHOD"
            }
        ],
        "getResourceRelative": [
            {
                "scope": "ObjectUtilities",
                "modifier": "public static ",
                "cnt": 106,
                "dtype": "URL",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "convertName": [
            {
                "scope": "ObjectUtilities",
                "modifier": "private static ",
                "cnt": 106,
                "dtype": "String",
                "params": [
                    "String",
                    "Class"
                ],
                "itype": "METHOD"
            }
        ],
        "CLASS_CONTEXT": [
            {
                "scope": "ObjectUtilities",
                "cnt": 14,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "classLoader": [
            {
                "scope": "ObjectUtilities",
                "cnt": 420,
                "dtype": "ClassLoader",
                "itype": "VAR"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "private static ",
                "cnt": 1,
                "dtype": "ClassLoader",
                "itype": "VAR"
            }
        ],
        "classLoaderSource": [
            {
                "scope": "ObjectUtilities",
                "cnt": 315,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "private static ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "THREAD_CONTEXT": [
            {
                "scope": "ObjectUtilities",
                "cnt": 105,
                "dtype": "String",
                "itype": "VAR"
            },
            {
                "scope": "ObjectUtilities",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "versions": [
            {
                "scope": "isJDK14",
                "cnt": 420,
                "dtype": "String[]",
                "itype": "VAR"
            },
            {
                "scope": "parseVersions",
                "cnt": 420,
                "dtype": "ArrayList",
                "itype": "VAR"
            }
        ],
        "threadLoader": [
            {
                "scope": "getClassLoader",
                "cnt": 210,
                "dtype": "ClassLoader",
                "itype": "VAR"
            }
        ],
        "target": [
            {
                "scope": "isJDK14",
                "cnt": 105,
                "dtype": "String[]",
                "itype": "VAR"
            }
        ],
        "baseName": [
            {
                "scope": "convertName",
                "cnt": 210,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "version": [
            {
                "scope": "isJDK14",
                "cnt": 420,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "applicationCL": [
            {
                "scope": "getClassLoader",
                "cnt": 210,
                "dtype": "ClassLoader",
                "itype": "VAR"
            }
        ],
        "cname": [
            {
                "scope": "getResourceRelative",
                "cnt": 105,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "loader": [
            {
                "scope": "loadAndInstantiate",
                "cnt": 840,
                "dtype": "ClassLoader",
                "itype": "VAR"
            },
            {
                "scope": "isJDK14",
                "cnt": 420,
                "dtype": "ClassLoader",
                "itype": "VAR"
            }
        ],
        "pkgName": [
            {
                "scope": "convertName",
                "cnt": 105,
                "dtype": "String",
                "itype": "VAR"
            }
        ],
        "cl": [
            {
                "scope": "getResource",
                "cnt": 420,
                "dtype": "ClassLoader",
                "itype": "VAR"
            },
            {
                "scope": "getResourceRelative",
                "cnt": 420,
                "dtype": "ClassLoader",
                "itype": "VAR"
            }
        ],
        "method": [
            {
                "scope": "clone",
                "cnt": 210,
                "dtype": "Method",
                "itype": "VAR"
            }
        ],
        "strtok": [
            {
                "scope": "parseVersions",
                "cnt": 210,
                "dtype": "StringTokenizer",
                "itype": "VAR"
            }
        ],
        "\"java.util.RandomAccess\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"1\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Failed to clone.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"Null 'collection' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"4\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"ClassContext\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"ThreadContext\"": [
            {
                "cnt": 2,
                "itype": "STRING"
            }
        ],
        "\"Null 'object' argument.\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"clone\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"java.vm.specification.version\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\".\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"/\"": [
            {
                "cnt": 2,
                "itype": "STRING"
            }
        ],
        "'.'": [
            {
                "cnt": 2,
                "itype": "CHAR"
            }
        ],
        "'/'": [
            {
                "cnt": 1,
                "itype": "CHAR"
            }
        ],
        "SortOrder": [
            {
                "methods": [
                    "readResolve",
                    "hashCode",
                    "equals",
                    "toString"
                ],
                "scope": "SortOrder",
                "cnt": 4,
                "supers": [
                    "Serializable"
                ],
                "fields": [
                    "serialVersionUID",
                    "ASCENDING",
                    "DESCENDING",
                    "name"
                ],
                "constructors": [
                    [
                        "String"
                    ]
                ],
                "itype": "TYPE"
            }
        ],
        "ASCENDING": [
            {
                "scope": "SortOrder",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "SortOrder",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "cnt": 1,
                "dtype": "SortOrder",
                "itype": "VAR"
            }
        ],
        "DESCENDING": [
            {
                "scope": "SortOrder",
                "modifier": "public static final ",
                "cnt": 1,
                "dtype": "SortOrder",
                "itype": "VAR"
            },
            {
                "scope": "SortOrder",
                "cnt": 1,
                "dtype": "SortOrder",
                "itype": "VAR"
            }
        ],
        "\"SortOrder.ASCENDING\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ],
        "\"SortOrder.DESCENDING\"": [
            {
                "cnt": 1,
                "itype": "STRING"
            }
        ]
    }
}