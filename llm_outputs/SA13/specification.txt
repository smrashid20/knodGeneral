DLZ (Dynamically Loadable Zones) is an extention to BIND 9 that allows zone data to be retrieved directly from an external database. There is no required format or schema. DLZ drivers exist for several different database backends including PostgreSQL, MySQL, and LDAP and can be written for any other. When the DLZ module provides data to named, it does so in text format. The response is converted to DNS wire format by named. This conversion, and the lack of any internal caching, places significant limits on the query performance of DLZ modules. Consequently, DLZ is not recommended for use on high-volume servers. However, it can be used in a hidden master configuration, with slaves retrieving zone updates via AXFR. (Note, however, that DLZ has no built-in support for DNS notify; slaves are not automatically informed of changes to the zones in the database.)
- isc_result_t writeable_zone(dns_view_t *view, const char *zone_name); Allows the DLZ module to inform named that a given zone can recieve DDNS updates. (Note: This is not currently supported for DLZ databases that are configured as 'search no;')
- isc_result_t dlz_allowzonexfr(void *dbdata, const char *name, const char *client); Optional. Supply this if you want the module to support AXFR for the specified zone and client. A return value of ISC_R_SUCCESS means AXFR is allowed, any other value means it isn't.
- isc_result_t dlz_allnodes(const char *zone, void *dbdata, dns_sdlzallnodes_t *allnodes); Optional, but must be supplied dlz_allowzonexfr() is. This function returns all nodes in the zone in order to perform a zone transfer.