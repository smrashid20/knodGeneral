Key exchange (kex) begins with each side sending name lists of supported algorithms. Each side has a preferred algorithm in each category, and it is assumed that most implementations will use the same preferred algorithm at any given time.
The guess is considered wrong if the kex algorithm and/or the host key algorithm are guessed wrong (server and client have different preferred algorithms) or if any of the other algorithms cannot be agreed upon. Otherwise, the guess is considered to be right, and the optimistically sent packet MUST be handled as the first key exchange packet.
However, if the guess was wrong and a packet was optimistically sent by one or both parties, such packets MUST be ignored, and the appropriate side MUST send the correct initial packet.
A key exchange method uses explicit server authentication if the key exchange messages include a signature or other proof of the server's authenticity. A key exchange method uses implicit server authentication if to prove its authenticity, the server also has to prove that it knows the shared secret, K, by sending a message and a corresponding MAC that the client can verify.
After a key exchange with implicit server authentication, the client MUST wait for a response to its service request message before sending any further data.
The message authentication algorithm and key are negotiated during key exchange. Initially, no MAC will be in effect, and its length MUST be zero.