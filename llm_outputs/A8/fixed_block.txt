    if (first_kex_packet_follows || session->send_first_kex_follows) {
        char **client_methods = crypto->client_kex.methods;
        char **server_methods = crypto->server_kex.methods;
        session->first_kex_follows_guess_wrong =
            cmp_first_kex_algo(client_methods[SSH_KEX],
                               server_methods[SSH_KEX]) ||
            cmp_first_kex_algo(client_methods[SSH_HOSTKEYS],
                               server_methods[SSH_HOSTKEYS]);
            SSH_LOG(SSH_LOG_DEBUG, "The initial guess was %s.",
                    session->first_kex_follows_guess_wrong ? "wrong" : "right");
    }

    /*
     * handle the "strict KEX" feature. If supported by peer, then set up the
     * flag and verify packet sequence numbers.
     */
    if (server_kex) {
        ok = ssh_match_group(crypto->client_kex.methods[SSH_KEX],
                             KEX_STRICT_CLIENT);
        if (ok) {
            SSH_LOG(SSH_LOG_DEBUG, "Client supports strict kex, enabling.");
            session->flags |= SSH_SESSION_FLAG_KEX_STRICT;
        }
    } else {
        /* client kex */
        ok = ssh_match_group(crypto->server_kex.methods[SSH_KEX],
                             KEX_STRICT_SERVER);
        if (ok) {
            SSH_LOG(SSH_LOG_DEBUG, "Server supports strict kex, enabling.");
            session->flags |= SSH_SESSION_FLAG_KEX_STRICT;
        }
    }
