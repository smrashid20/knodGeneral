If the CertificateVerify message is sent by a server, the signature algorithm MUST be one offered in the client's "signature\_algorithms" extension unless no valid certificate chain can be produced without unsupported algorithms.

If sent by a client, the signature algorithm used in the signature MUST be one of those present in the supported\_signature\_algorithms field of the "signature\_algorithms" extension in the CertificateRequest message.

In addition, the signature algorithm MUST be compatible with the key in the sender's end-entity certificate. RSA signatures MUST use an RSASSA-PSS algorithm, regardless of whether RSASSA-PKCS1-v1\_5 algorithms appear in "signature\_algorithms". The SHA-1 algorithm MUST NOT be used in any signatures of CertificateVerify messages.

All SHA-1 signature algorithms in this specification are defined solely for use in legacy certificates and are not valid for CertificateVerify signatures.

The receiver of a CertificateVerify message MUST verify the signature field. The verification process takes as input:

* The content covered by the digital signature
* The public key contained in the end-entity certificate found in the associated Certificate message
* The digital signature received in the signature field of the CertificateVerify message

If the verification fails, the receiver MUST terminate the handshake with a "decrypt\_error" alert.