	result =
	    asn1_der_decoding(&cert->cert, cert->der.data, cert->der.size, NULL);
	if (result != ASN1_SUCCESS) {
		result = _gnutls_asn2err(result);
		gnutls_assert();
		goto cleanup;
	}

	result = _gnutls_x509_get_signature_algorithm(cert->cert,
						      "signatureAlgorithm.algorithm");
	if (result < 0) {
		gnutls_assert();
		goto cleanup;
	}

	s2 = _gnutls_x509_get_signature_algorithm(cert->cert,
						  "tbsCertificate.signature.algorithm");
	if (result != s2) {
		_gnutls_debug_log("signatureAlgorithm.algorithm differs from tbsCertificate.signature.algorithm: %s, %s\n",
			gnutls_sign_get_name(result), gnutls_sign_get_name(s2));
		gnutls_assert();
		result = GNUTLS_E_CERTIFICATE_ERROR;
		goto cleanup;
	}

	result = _gnutls_x509_get_raw_field2(cert->cert, &cert->der,
					  "tbsCertificate.issuer.rdnSequence",
					  &cert->raw_issuer_dn);
	if (result < 0) {
		gnutls_assert();
		goto cleanup;
	}
