EVP_CipherInit_ex(), EVP_CipherUpdate(), and EVP_CipherFinal_ex() are used for encryption or decryption, depending on the value of the `enc` parameter: 1 for encryption, 0 for decryption, and -1 to leave it unchanged. EVP_CIPHER_CTX_cleanup() clears all information from a cipher context and frees allocated memory. It should be called after cipher operations to avoid sensitive data remaining in memory.
EVP_EncryptInit(), EVP_DecryptInit(), and EVP_CipherInit() work similarly to their `_ex` counterparts but do not require the `ctx` parameter to be initialized and always use the default cipher implementation. EVP_CipherInit_ex() and EVP_CipherUpdate() return 1 on success and 0 on failure. EVP_CipherFinal_ex() returns 1 on success and 0 on decryption failure.
EVP_CIPHER_asn1_to_param() sets cipher parameters based on an ASN1 AlgorithmIdentifier. Its behavior depends on the cipher; for example, with RC2, it sets the IV and effective key length. This function should be called after setting the base cipher type but before setting the key. Typically, EVP_CipherInit() is called with NULL IV and key, followed by EVP_CIPHER_asn1_to_param(), then EVP_CipherInit() again with all parameters except the key set to NULL. It may fail if the cipher lacks ASN1 support or if parameters are unsupported.
The functions EVP_EncryptInit(), EVP_EncryptFinal(), EVP_DecryptInit(), EVP_CipherInit(), and EVP_CipherFinal() are obsolete but retained for backward compatibility. New code should use the `_ex()` versions as they allow context reuse.